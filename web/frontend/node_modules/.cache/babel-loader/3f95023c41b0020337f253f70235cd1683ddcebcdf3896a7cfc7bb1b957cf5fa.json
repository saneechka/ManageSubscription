{"ast":null,"code":"// API utility for making requests to our backend\n\n/**\n * Makes a request to the API\n * @param {string} endpoint - API endpoint to call\n * @param {Object} options - Request options\n * @returns {Promise} - Promise that resolves to the API response\n */\nexport const apiRequest = async (endpoint, options = {}) => {\n  // Get the auth token if it exists\n  const token = localStorage.getItem('token');\n\n  // Default headers\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers\n  };\n\n  // Add auth token if available\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  try {\n    const response = await fetch(`/api${endpoint}`, {\n      ...options,\n      headers\n    });\n\n    // Parse the JSON response\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Something went wrong');\n    }\n    return data;\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n};\n\n// User API methods\nexport const userAPI = {\n  register: userData => apiRequest('/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  }),\n  login: credentials => apiRequest('/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }),\n  getProfile: () => apiRequest('/profile'),\n  updateProfile: userData => apiRequest('/profile', {\n    method: 'PUT',\n    body: JSON.stringify(userData)\n  })\n};\nexport const plansAPI = {\n  getAll: () => apiRequest('/plans'),\n  getById: id => apiRequest(`/plans/${id}`),\n  filterByPrice: (minPrice, maxPrice) => apiRequest(`/plans/filter?min=${minPrice}&max=${maxPrice}`)\n};\nexport const subscriptionsAPI = {\n  getAll: () => apiRequest('/subscriptions'),\n  getActive: () => apiRequest('/subscriptions/active'),\n  getById: id => apiRequest(`/subscriptions/${id}`),\n  getStats: () => apiRequest('/subscriptions/stats'),\n  search: (query = '', status = '', sortBy = '') => {\n    const params = new URLSearchParams();\n    if (query) params.append('query', query);\n    if (status) params.append('status', status);\n    if (sortBy) params.append('sort_by', sortBy);\n    return apiRequest(`/subscriptions/search?${params.toString()}`);\n  },\n  renew: subscriptionId => apiRequest(`/subscriptions/${subscriptionId}/renew`, {\n    method: 'PUT'\n  }),\n  subscribe: (planId, paymentId = '') => apiRequest('/subscriptions', {\n    method: 'POST',\n    body: JSON.stringify({\n      plan_id: planId,\n      payment_id: paymentId\n    })\n  }),\n  cancel: subscriptionId => apiRequest(`/subscriptions/${subscriptionId}/cancel`, {\n    method: 'PUT'\n  }),\n  updateAutoRenewal: (subscriptionId, autoRenew) => apiRequest(`/subscriptions/${subscriptionId}/auto-renew`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      auto_renew: autoRenew\n    })\n  })\n};\n\n// Admin API methods\nexport const adminAPI = {\n  createPlan: planData => apiRequest('/admin/plans', {\n    method: 'POST',\n    body: JSON.stringify(planData)\n  }),\n  updatePlan: (planId, planData) => apiRequest(`/admin/plans/${planId}`, {\n    method: 'PUT',\n    body: JSON.stringify(planData)\n  }),\n  deletePlan: planId => apiRequest(`/admin/plans/${planId}`, {\n    method: 'DELETE'\n  })\n};","map":{"version":3,"names":["apiRequest","endpoint","options","token","localStorage","getItem","headers","response","fetch","data","json","ok","Error","error","console","userAPI","register","userData","method","body","JSON","stringify","login","credentials","getProfile","updateProfile","plansAPI","getAll","getById","id","filterByPrice","minPrice","maxPrice","subscriptionsAPI","getActive","getStats","search","query","status","sortBy","params","URLSearchParams","append","toString","renew","subscriptionId","subscribe","planId","paymentId","plan_id","payment_id","cancel","updateAutoRenewal","autoRenew","auto_renew","adminAPI","createPlan","planData","updatePlan","deletePlan"],"sources":["/Users/saneechka/ManageSubscription/web/frontend/src/utils/api.js"],"sourcesContent":["// API utility for making requests to our backend\n\n/**\n * Makes a request to the API\n * @param {string} endpoint - API endpoint to call\n * @param {Object} options - Request options\n * @returns {Promise} - Promise that resolves to the API response\n */\nexport const apiRequest = async (endpoint, options = {}) => {\n  // Get the auth token if it exists\n  const token = localStorage.getItem('token');\n  \n  // Default headers\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n  \n  // Add auth token if available\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  try {\n    const response = await fetch(`/api${endpoint}`, {\n      ...options,\n      headers,\n    });\n    \n    // Parse the JSON response\n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.error || 'Something went wrong');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n};\n\n// User API methods\nexport const userAPI = {\n  register: (userData) => apiRequest('/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  }),\n  \n  login: (credentials) => apiRequest('/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials),\n  }),\n  \n  getProfile: () => apiRequest('/profile'),\n  \n  updateProfile: (userData) => apiRequest('/profile', {\n    method: 'PUT',\n    body: JSON.stringify(userData),\n  }),\n};\n\n\nexport const plansAPI = {\n  getAll: () => apiRequest('/plans'),\n  \n  getById: (id) => apiRequest(`/plans/${id}`),\n  \n  filterByPrice: (minPrice, maxPrice) => apiRequest(`/plans/filter?min=${minPrice}&max=${maxPrice}`),\n};\n\n\nexport const subscriptionsAPI = {\n  getAll: () => apiRequest('/subscriptions'),\n  \n  getActive: () => apiRequest('/subscriptions/active'),\n  \n  getById: (id) => apiRequest(`/subscriptions/${id}`),\n  \n  getStats: () => apiRequest('/subscriptions/stats'),\n  \n  search: (query = '', status = '', sortBy = '') => {\n    const params = new URLSearchParams();\n    if (query) params.append('query', query);\n    if (status) params.append('status', status);\n    if (sortBy) params.append('sort_by', sortBy);\n    \n    return apiRequest(`/subscriptions/search?${params.toString()}`);\n  },\n  \n  renew: (subscriptionId) => apiRequest(`/subscriptions/${subscriptionId}/renew`, {\n    method: 'PUT',\n  }),\n  \n  subscribe: (planId, paymentId = '') => apiRequest('/subscriptions', {\n    method: 'POST',\n    body: JSON.stringify({ plan_id: planId, payment_id: paymentId }),\n  }),\n  \n  cancel: (subscriptionId) => apiRequest(`/subscriptions/${subscriptionId}/cancel`, {\n    method: 'PUT',\n  }),\n  \n  updateAutoRenewal: (subscriptionId, autoRenew) => apiRequest(`/subscriptions/${subscriptionId}/auto-renew`, {\n    method: 'PUT',\n    body: JSON.stringify({ auto_renew: autoRenew }),\n  }),\n};\n\n// Admin API methods\nexport const adminAPI = {\n  createPlan: (planData) => apiRequest('/admin/plans', {\n    method: 'POST',\n    body: JSON.stringify(planData),\n  }),\n  \n  updatePlan: (planId, planData) => apiRequest(`/admin/plans/${planId}`, {\n    method: 'PUT',\n    body: JSON.stringify(planData),\n  }),\n  \n  deletePlan: (planId) => apiRequest(`/admin/plans/${planId}`, {\n    method: 'DELETE',\n  }),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}