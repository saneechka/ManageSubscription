{"ast":null,"code":"// API utility for making requests to our backend\n/**\n * Makes a request to the API\n * @param {string} endpoint - API endpoint to call\n * @param {Object} options - Request options\n * @returns {Promise} - Promise that resolves to the API response\n */export const apiRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// Get the auth token if it exists\nconst token=localStorage.getItem('token');// Default headers\nconst headers={'Content-Type':'application/json',...options.headers};// Add auth token if available\nif(token){headers['Authorization']=`Bearer ${token}`;}try{const response=await fetch(`/api${endpoint}`,{...options,headers});// Parse the JSON response\nconst data=await response.json();if(!response.ok){throw new Error(data.error||'Something went wrong');}return data;}catch(error){console.error('API request error:',error);throw error;}};// User API methods\nexport const userAPI={register:userData=>apiRequest('/register',{method:'POST',body:JSON.stringify(userData)}),login:credentials=>apiRequest('/login',{method:'POST',body:JSON.stringify(credentials)}),getProfile:()=>apiRequest('/profile'),updateProfile:userData=>apiRequest('/profile',{method:'PUT',body:JSON.stringify(userData)})};// Plans API methods\nexport const plansAPI={getAll:()=>apiRequest('/plans'),getById:id=>apiRequest(`/plans/${id}`),filterByPrice:(minPrice,maxPrice)=>apiRequest(`/plans/filter?min=${minPrice}&max=${maxPrice}`)};// Subscriptions API methods\nexport const subscriptionsAPI={getAll:()=>apiRequest('/subscriptions'),getActive:()=>apiRequest('/subscriptions/active'),getById:id=>apiRequest(`/subscriptions/${id}`),getStats:()=>apiRequest('/subscriptions/stats'),search:function(){let query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let status=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';let sortBy=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';const params=new URLSearchParams();if(query)params.append('query',query);if(status)params.append('status',status);if(sortBy)params.append('sort_by',sortBy);return apiRequest(`/subscriptions/search?${params.toString()}`);},renew:subscriptionId=>apiRequest(`/subscriptions/${subscriptionId}/renew`,{method:'PUT'}),subscribe:function(planId){let paymentId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return apiRequest('/subscriptions',{method:'POST',body:JSON.stringify({plan_id:planId,payment_id:paymentId})});},cancel:subscriptionId=>apiRequest(`/subscriptions/${subscriptionId}/cancel`,{method:'PUT'}),updateAutoRenewal:(subscriptionId,autoRenew)=>apiRequest(`/subscriptions/${subscriptionId}/auto-renew`,{method:'PUT',body:JSON.stringify({auto_renew:autoRenew})})};// Admin API methods\nexport const adminAPI={createPlan:planData=>apiRequest('/admin/plans',{method:'POST',body:JSON.stringify(planData)}),updatePlan:(planId,planData)=>apiRequest(`/admin/plans/${planId}`,{method:'PUT',body:JSON.stringify(planData)}),deletePlan:planId=>apiRequest(`/admin/plans/${planId}`,{method:'DELETE'})};","map":{"version":3,"names":["apiRequest","endpoint","options","arguments","length","undefined","token","localStorage","getItem","headers","response","fetch","data","json","ok","Error","error","console","userAPI","register","userData","method","body","JSON","stringify","login","credentials","getProfile","updateProfile","plansAPI","getAll","getById","id","filterByPrice","minPrice","maxPrice","subscriptionsAPI","getActive","getStats","search","query","status","sortBy","params","URLSearchParams","append","toString","renew","subscriptionId","subscribe","planId","paymentId","plan_id","payment_id","cancel","updateAutoRenewal","autoRenew","auto_renew","adminAPI","createPlan","planData","updatePlan","deletePlan"],"sources":["/Users/saneechka/ManageSubscription/web/frontend/src/utils/api.js"],"sourcesContent":["// API utility for making requests to our backend\n\n/**\n * Makes a request to the API\n * @param {string} endpoint - API endpoint to call\n * @param {Object} options - Request options\n * @returns {Promise} - Promise that resolves to the API response\n */\nexport const apiRequest = async (endpoint, options = {}) => {\n  // Get the auth token if it exists\n  const token = localStorage.getItem('token');\n  \n  // Default headers\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n  \n  // Add auth token if available\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  try {\n    const response = await fetch(`/api${endpoint}`, {\n      ...options,\n      headers,\n    });\n    \n    // Parse the JSON response\n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.error || 'Something went wrong');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n};\n\n// User API methods\nexport const userAPI = {\n  register: (userData) => apiRequest('/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  }),\n  \n  login: (credentials) => apiRequest('/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials),\n  }),\n  \n  getProfile: () => apiRequest('/profile'),\n  \n  updateProfile: (userData) => apiRequest('/profile', {\n    method: 'PUT',\n    body: JSON.stringify(userData),\n  }),\n};\n\n// Plans API methods\nexport const plansAPI = {\n  getAll: () => apiRequest('/plans'),\n  \n  getById: (id) => apiRequest(`/plans/${id}`),\n  \n  filterByPrice: (minPrice, maxPrice) => apiRequest(`/plans/filter?min=${minPrice}&max=${maxPrice}`),\n};\n\n// Subscriptions API methods\nexport const subscriptionsAPI = {\n  getAll: () => apiRequest('/subscriptions'),\n  \n  getActive: () => apiRequest('/subscriptions/active'),\n  \n  getById: (id) => apiRequest(`/subscriptions/${id}`),\n  \n  getStats: () => apiRequest('/subscriptions/stats'),\n  \n  search: (query = '', status = '', sortBy = '') => {\n    const params = new URLSearchParams();\n    if (query) params.append('query', query);\n    if (status) params.append('status', status);\n    if (sortBy) params.append('sort_by', sortBy);\n    \n    return apiRequest(`/subscriptions/search?${params.toString()}`);\n  },\n  \n  renew: (subscriptionId) => apiRequest(`/subscriptions/${subscriptionId}/renew`, {\n    method: 'PUT',\n  }),\n  \n  subscribe: (planId, paymentId = '') => apiRequest('/subscriptions', {\n    method: 'POST',\n    body: JSON.stringify({ plan_id: planId, payment_id: paymentId }),\n  }),\n  \n  cancel: (subscriptionId) => apiRequest(`/subscriptions/${subscriptionId}/cancel`, {\n    method: 'PUT',\n  }),\n  \n  updateAutoRenewal: (subscriptionId, autoRenew) => apiRequest(`/subscriptions/${subscriptionId}/auto-renew`, {\n    method: 'PUT',\n    body: JSON.stringify({ auto_renew: autoRenew }),\n  }),\n};\n\n// Admin API methods\nexport const adminAPI = {\n  createPlan: (planData) => apiRequest('/admin/plans', {\n    method: 'POST',\n    body: JSON.stringify(planData),\n  }),\n  \n  updatePlan: (planId, planData) => apiRequest(`/admin/plans/${planId}`, {\n    method: 'PUT',\n    body: JSON.stringify(planData),\n  }),\n  \n  deletePlan: (planId) => apiRequest(`/admin/plans/${planId}`, {\n    method: 'DELETE',\n  }),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}